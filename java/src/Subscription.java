// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package COEN;

import java.util.Scanner;

/************************************************************/

/**
 *
 */
public class Subscription {
    /**
     *
     */
    public int user_id;
    /**
     *
     */
    public int bucket_id;

    /**
     *
     */
    public static void subscribeToggle() {
        Scanner s = new Scanner(System.in);
        System.out.println("Enter UserID");
        int s_uid = s.nextInt();
        System.out.println("Enter BucketID");
        int s_bid = s.nextInt();

        Subscription sub_s = new Subscription();
        sub_s.setBucket_id(s_bid);
        sub_s.setUser_id(s_uid);

        boolean user_exists = Main.userArray.stream().anyMatch(u -> u.getId() == s_uid);
        boolean bucket_exists = Main.bucketArray.stream().anyMatch(b -> b.getId() == s_bid);


        if (user_exists == true && bucket_exists == true) {
            if (Main.subscriptionArray.contains(sub_s)) {
                System.out.println("You're already subscribed. Now, You'll be unsubscribed. See'ya.");
                Bucket s_b = Main.bucketArray.stream().filter(b -> (b.getId() == s_bid)).reduce((a, b) -> {
                    throw new IllegalStateException("Multiple elements: " + a + ", " + b);
                }).get();

                s_b.setSubscribers(s_b.getSubscribers() - 1);

                Main.subscriptionArray.remove(sub_s);
            } else {
                System.out.println("Welcome to the Family!");
                Bucket s_b = Main.bucketArray.stream().filter(b -> (b.getId() == s_bid)).reduce((a, b) -> {
                    throw new IllegalStateException("Multiple elements: " + a + ", " + b);
                }).get();

                s_b.setSubscribers(s_b.getSubscribers() + 1);

                Main.subscriptionArray.add(sub_s);
            }
        } else {
            System.out.println("User or Bucket doesn't exist. Create them first.");
        }
    }

    /**
     *
     */
    public static void isSubscribed() {
        Scanner s = new Scanner(System.in);
        System.out.println("Enter UserID");
        int s_uid = s.nextInt();
        System.out.println("Enter BucketID");
        int s_bid = s.nextInt();

        Subscription sub_s = new Subscription();
        sub_s.setBucket_id(s_bid);
        sub_s.setUser_id(s_uid);


        if (Main.subscriptionArray.contains(sub_s)) {
            System.out.println("You're subscribed. See'ya.");
        } else {
            System.out.println("You're not subscribed. Join us soon. It's free!");
        }
    }

    /**
     *
     */
    public static void show() {
        Main.subscriptionArray.stream().forEach(s -> System.out.println(s.toString() + System.lineSeparator()));
    }

    /**
     * @return the user_id
     */
    public int getUser_id() {
        return user_id;
    }

    /**
     * @param user_id the user_id to set
     */
    public void setUser_id(int user_id) {
        this.user_id = user_id;
    }

    /**
     * @return the bucket_id
     */
    public int getBucket_id() {
        return bucket_id;
    }

    /**
     * @param bucket_id the bucket_id to set
     */
    public void setBucket_id(int bucket_id) {
        this.bucket_id = bucket_id;
    }

    /**
     * @return
     */
    @Override
    public String toString() {
        return "User ID: " + this.user_id + " is subscribed to Bucket with an ID " + this.bucket_id;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + bucket_id;
        result = prime * result + user_id;
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (!(obj instanceof Subscription)) return false;
        Subscription other = (Subscription) obj;
        if (bucket_id != other.bucket_id) return false;
        if (user_id != other.user_id) return false;
        return true;
    }
}
