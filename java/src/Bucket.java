// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package COEN;

import java.util.Scanner;

/************************************************************/

/**
 *
 */
public class Bucket {

    /**
     *
     */
    public int id;
    /**
     *
     */
    public String name;
    /**
     *
     */
    public String language = "en";
    /**
     *
     */
    public String description;
    /**
     *
     */
    public int subscribers = 1;
    /**
     *
     */
    public boolean is_public = true;
    /**
     *
     */
    public Time created_at;
    /**
     *
     */
    public Time edited_at;

    /**
     * @param bucket_name
     * @param sort
     */
    public static void getSubmissions(String bucket_name) {
        if (Main.subArray.stream().anyMatch(s -> (s.getBucket_name().equals(bucket_name))) == true) {
            Main.subArray.stream().filter(s -> (s.getBucket_name().equals(bucket_name))).forEach(s -> System.out.println(s.toString() + System.lineSeparator()));
        } else {
            System.out.println("No Submission exists.");
        }
    }

    /**
     *
     */
    public static void show() {
        Main.bucketArray.stream().forEach(s -> System.out.println(s.toString() + System.lineSeparator()));
    }

    /**
     *
     */
    public static void store() {
        Scanner s = new Scanner(System.in);
        System.out.println("Enter Bucket ID");
        int s_bucket_id = s.nextInt();
        System.out.println("Enter Bucket Name");
        String s_bucket_name = s.next();

        boolean bucket_exists = Main.bucketArray.stream().anyMatch(b -> b.getId() == s_bucket_id);


        if (bucket_exists == false) {
            Bucket b = new Bucket();
            b.setId(s_bucket_id);
            b.setName(s_bucket_name);
            b.setSubscribers(0);
            Main.bucketArray.add(b);
        } else {
            System.out.println("Bucket already exists.");
        }
    }

    /**
     *
     */
    public static void getBuckets() {
        Main.bucketArray.stream().forEach(s -> System.out.println("Bucket ==> " + s.getName() + System.lineSeparator()));
    }

    /**
     * @return the id
     */
    public int getId() {
        return id;
    }

    /**
     * @param id the id to set
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * @return the name
     */
    public String getName() {
        return name;
    }

    /**
     * @param name the name to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @return the language
     */
    public String getLanguage() {
        return language;
    }

    /**
     * @param language the language to set
     */
    public void setLanguage(String language) {
        this.language = language;
    }

    /**
     * @return the description
     */
    public String getDescription() {
        return description;
    }

    /**
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * @return the subscribers
     */
    public int getSubscribers() {
        return subscribers;
    }

    /**
     * @param subscribers the subscribers to set
     */
    public void setSubscribers(int subscribers) {
        this.subscribers = subscribers;
    }

    /**
     * @return the is_public
     */
    public boolean isIs_public() {
        return is_public;
    }

    /**
     * @param is_public the is_public to set
     */
    public void setIs_public(boolean is_public) {
        this.is_public = is_public;
    }

    /**
     * @return the created_at
     */
    public Time getCreated_at() {
        return created_at;
    }

    /**
     * @param created_at the created_at to set
     */
    public void setCreated_at(Time created_at) {
        this.created_at = created_at;
    }

    /**
     * @return the edited_at
     */
    public Time getEdited_at() {
        return edited_at;
    }

    /**
     * @param edited_at the edited_at to set
     */
    public void setEdited_at(Time edited_at) {
        this.edited_at = edited_at;
    }

    /**
     *
     */
    public void subscribeToggle(Request request) {
    }

    /**
     * @return
     */
    @Override
    public String toString() {
        return "Id: " + this.id + System.lineSeparator() + "Name: " + this.name + System.lineSeparator() + "Subscribers: " + this.subscribers;
    }

    /**
     * @param bucket
     * @param user
     */
    public void setIntialUserToBucketRoles(COEN.Bucket bucket, User user) {
    }

    /**
     * @param request
     */
    public void patch(Request request) {
    }

    /**
     * @param bucket_id
     */
    public void destroy(int bucket_id) {
    }

    /**
     * @param bucket_id
     */
    public void get(int bucket_id) {
    }
}
