// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package COEN;

import java.util.Scanner;
//import COEN.Request;
//import COEN.Time;

/************************************************************/

/**
 *
 */
public class Submission {
    /**
     *
     */
    public int id;
    /**
     *
     */
    public String slug;
    /**
     *
     */
    public String title;
    /**
     *
     */
    public String type;
    /**
     *
     */
    public String link;
    /**
     *
     */
    public String data;
    /**
     *
     */
    public String bucket_name;
    /**
     *
     */
    public int user_id;
    /**
     *
     */
    public int bucket_id;
    /**
     *
     */
    public int upvotes = 0;
    /**
     *
     */
    public int downvotes = 0;
    /**
     *
     */
    public int comments_number = 0;
    /**
     *
     */
    public Time created_at;
    /**
     *
     */
    public Time updated_at;
    /**
     *
     */
    public Time approved_at;

    /**
     *
     */
    public static void show() {
        Main.subArray.stream().forEach(s -> System.out.println(s.toString() + System.lineSeparator()));
    }

    /**
     *
     */
    public static void store() {
        Scanner s = new Scanner(System.in);
        System.out.println("Enter Id: ");
        int id = s.nextInt();
        System.out.println("Enter Title");
        String title = s.next();
        System.out.println("Enter Link");
        String link = s.next();
        System.out.println("Enter User ID");
        int user_id = s.nextInt();
        System.out.println("Enter Bucket Name");
        String bucket = s.next();
        System.out.println("Enter Bucket ID");
        int bucket_id = s.nextInt();

        boolean user_exists = Main.userArray.stream().anyMatch(u -> u.getId() == user_id);
        boolean bucket_exists = Main.bucketArray.stream().anyMatch(b -> b.getId() == bucket_id);

        if (user_exists == true && bucket_exists == true) {
            Submission s1 = new Submission();
            s1.setTitle(title);
            s1.setBucket_name(bucket);
            s1.setId(id);
            s1.setUser_id(user_id);
            s1.setLink(link);
            s1.setUpvotes(0);
            s1.setDownvotes(0);
            s1.setBucket_id(bucket_id);
            Main.subArray.add(s1);
        } else {
            System.out.println("User or Bucket Doesn't exists. Create them first.");
        }
    }

    /**
     * @param id
     */
    public static Submission get(int id) {
        return Main.subArray.stream().filter(s -> id == s.getId()).findFirst().orElse(null);
    }

    /**
     * @param submission_id
     */
    public static void destroy(int submission_id) {
        Main.subArray.removeIf(s -> submission_id == s.getId());
    }

    /**
     * @return the id
     */
    public int getId() {
        return id;
    }

    /**
     * @param id the id to set
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * @return the slug
     */
    public String getSlug() {
        return slug;
    }

    /**
     * @param slug the slug to set
     */
    public void setSlug(String slug) {
        this.slug = slug;
    }

    /**
     * @return the title
     */
    public String getTitle() {
        return title;
    }

    /**
     * @param title the title to set
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * @return the type
     */
    public String getType() {
        return type;
    }

    /**
     * @param type the type to set
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * @return the link
     */
    public String getLink() {
        return link;
    }

    /**
     * @param link the link to set
     */
    public void setLink(String link) {
        this.link = link;
    }

    /**
     * @return the data
     */
    public String getData() {
        return data;
    }

    /**
     * @param data the data to set
     */
    public void setData(String data) {
        this.data = data;
    }

    /**
     * @return the bucket_name
     */
    public String getBucket_name() {
        return bucket_name;
    }

    /**
     * @param bucket_name the bucket_name to set
     */
    public void setBucket_name(String bucket_name) {
        this.bucket_name = bucket_name;
    }

    /**
     * @return the user_id
     */
    public int getUser_id() {
        return user_id;
    }

    /**
     * @param user_id the user_id to set
     */
    public void setUser_id(int user_id) {
        this.user_id = user_id;
    }

    /**
     * @return the bucket_id
     */
    public int getBucket_id() {
        return bucket_id;
    }

    /**
     * @param bucket_id the bucket_id to set
     */
    public void setBucket_id(int bucket_id) {
        this.bucket_id = bucket_id;
    }

    /**
     * @return the upvotes
     */
    public int getUpvotes() {
        return upvotes;
    }

    /**
     * @param upvotes the upvotes to set
     */
    public void setUpvotes(int upvotes) {
        this.upvotes = upvotes;
    }

    /**
     * @return the downvotes
     */
    public int getDownvotes() {
        return downvotes;
    }

    /**
     * @param downvotes the downvotes to set
     */
    public void setDownvotes(int downvotes) {
        this.downvotes = downvotes;
    }

    /**
     * @return the comments_number
     */
    public int getComments_number() {
        return comments_number;
    }

    /**
     * @param comments_number the comments_number to set
     */
    public void setComments_number(int comments_number) {
        this.comments_number = comments_number;
    }

    /**
     * @return the created_at
     */
    public Time getCreated_at() {
        return created_at;
    }

    /**
     * @param created_at the created_at to set
     */
    public void setCreated_at(Time created_at) {
        this.created_at = created_at;
    }

    /**
     * @return the updated_at
     */
    public Time getUpdated_at() {
        return updated_at;
    }

    /**
     * @param updated_at the updated_at to set
     */
    public void setUpdated_at(Time updated_at) {
        this.updated_at = updated_at;
    }

    /**
     * @return the approved_at
     */
    public Time getApproved_at() {
        return approved_at;
    }

    /**
     * @param approved_at the approved_at to set
     */
    public void setApproved_at(Time approved_at) {
        this.approved_at = approved_at;
    }

    /**
     * @return
     */
    @Override
    public String toString() {
        return "Id: " + this.id + System.lineSeparator() + "Title: " + this.title + System.lineSeparator() + "Link: " + this.link + System.lineSeparator() + "UserID: " + this.user_id + System.lineSeparator() + "Upvotes: " + this.upvotes + System.lineSeparator() + "Downvotes: " + this.downvotes;
    }

    /**
     * @param request
     * @param submission_id
     */
    public void patchSubmission(Request request, int submission_id) {
    }
}
